$gutter-width: 1;
$outer-margin: 2;
$gutter-compensation: (($gutter-width * 0.5) * -1);
$half-gutter-width: ($gutter-width * 0.5);
$sm-min: 32;
$md-min: 44;
$lg-min: 58;
$xl-min: 71;
$screen-sm-min: ($sm-min);
$screen-md-min: ($md-min);
$screen-md-min: ($md-min);
$screen-lg-min: ($lg-min);
$container-sm: ($sm-min + $gutter-width);
$container-md: ($md-min + $gutter-width);
$container-lg: ($lg-min + $gutter-width);
$container-xl: ($xl-min + $gutter-width);

$container-max-widths: (
        sm: 540px,
        md: 720px,
        lg: 960px,
        xl: 1140px
) !default;

.container-fluid,
.container {
  margin-right: auto;
  margin-left: auto;
  padding-right: #{$gutter-width}rem;
  padding-left: #{$gutter-width}rem;
  width: 100%;
}

.row {
  display: flex;
  flex-flow: row wrap;
  flex: 0 1 auto;
  margin-left: -#{$half-gutter-width}rem;
  margin-right: -#{$half-gutter-width}rem;
}

.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

$columns: 12;

%columns {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: #{$half-gutter-width}rem;
  padding-left: #{$half-gutter-width}rem;
}

@each $breakpoint, $px in $breakpoints {

  $infix: breakpoint-infix($breakpoint, $breakpoints);

  @for $i from 1 through $columns {

    .col#{$infix} {
      @extend %columns;
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }

    .col#{$infix}-#{$i},
    .col#{$infix}-offset-#{$i} {
      @extend %columns;
    }

    @include mq($breakpoint) {

      .col#{$infix}-#{$i} {
        flex: 0 0 percentage($i / $columns);
      }

      .col#{$infix}-offset-#{$i} {
        @if not ($i == $columns) {
          margin-left: 100% / ( $columns ) * $i;
        }
      }

      .start#{$infix} {
        justify-content: flex-start;
      }

      .center#{$infix} {
        justify-content: center;
      }

      .end#{$infix} {
        justify-content: flex-end;
      }

      .top#{$infix} {
        align-items: flex-start;
      }

      .middle#{$infix} {
        align-items: center;
      }

      .bottom#{$infix} {
        align-items: flex-end;
      }

      .around#{$infix} {
        justify-content: space-around;
      }

      .between#{$infix} {
        justify-content: space-between;
      }

      .first#{$infix} {
        order: -1;
      }

      .last#{$infix} {
        order: 1;
      }
    }
  }
}

@each $breakpoint, $px in $container-max-widths {
  @include mq($breakpoint) {
    .container {
      max-width: $px;
    }
  }
}